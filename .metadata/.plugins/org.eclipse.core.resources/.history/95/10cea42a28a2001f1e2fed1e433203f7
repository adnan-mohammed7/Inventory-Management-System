package application.models;

import application.abstractClasses.Part;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;

public class Inventory {
	ObservableList<Part> allParts;
	ObservableList<Products> allProducts;
	
	addPart(newPart : Part) : void
	+ addProduct(newProduct: Product) : void
	+ searchPartByID(partId : int) : Part
	+ searchProductByID(productId : int) : Product
	+ searchPartByName(name : String) : ObservableList<Part>
	+ searchProductByName(name : String) : ObservableList<Product>
	
	public ObservableList<Part> searchPartByName(String name){
		ObservableList<Part> matchingParts = FXCollections.observableArrayList();

	    // Stream through the parts list and collect matches
	    matchingParts.addAll(
	        partsList.stream()
	                 .filter(part -> part.getName().toLowerCase().contains(name.toLowerCase())) // case-insensitive match
	                 .toList()
	    );

	    return matchingParts;
	}
	
	public void updatePart(int index, Part selectedPart) {
		allParts.set(index, selectedPart);
	}
	
	public void updateProduct(int index, Products selectedProduct) {
		allProducts.set(index, selectedProduct);
	}
	
	public boolean deletePart(Part selectedPart) {
		return allParts.remove(selectedPart);
	}
	
	public boolean deleteProducts(Products selectedProduct) {
		return allProducts.remove(selectedProduct);
	}
	
	public ObservableList<Part> getAllParts(){
		return this.allParts;
	}
	
	public ObservableList<Products> getAllProducts(){
		return this.allProducts;
	}
}
