package application.models;

import application.abstractClasses.Part;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;

public class Inventory {
	ObservableList<Part> allParts;
	ObservableList<Products> allProducts;
	
	addPart(newPart : Part) : void
	+ addProduct(newProduct: Product) : void
	
	public Part searchPartByID(int partId){
		return allParts.stream()
				.filter(part -> part.getId() == partId)
				.findFirst()
				.orElse(null);
	}
	
	public Products searchProductByID(int productId){
		return allProducts.stream()
				.filter(prod -> prod.getId() == productId)
				.findFirst()
				.orElse(null);
	}
	
	
	public ObservableList<Part> searchPartByName(String name){
		ObservableList<Part> matchingParts = FXCollections.observableArrayList();

	    matchingParts.addAll(
	        allParts.stream()
	                 .filter(part -> part.getName().toLowerCase().contains(name.toLowerCase()))
	                 .toList()
	    );

	    return matchingParts;
	}
	
	public ObservableList<Products> searchProductByName(String name){
		ObservableList<Products> matchingproducts = FXCollections.observableArrayList();
		
		matchingproducts.addAll(
				allProducts.stream()
				.filter(prod -> prod.getName().toLowerCase().contains(name.toLowerCase()))
				.toList()
				);
		
		return matchingproducts;
	}
	
	public void updatePart(int index, Part selectedPart) {
		allParts.set(index, selectedPart);
	}
	
	public void updateProduct(int index, Products selectedProduct) {
		allProducts.set(index, selectedProduct);
	}
	
	public boolean deletePart(Part selectedPart) {
		return allParts.remove(selectedPart);
	}
	
	public boolean deleteProducts(Products selectedProduct) {
		return allProducts.remove(selectedProduct);
	}
	
	public ObservableList<Part> getAllParts(){
		return this.allParts;
	}
	
	public ObservableList<Products> getAllProducts(){
		return this.allProducts;
	}
}
