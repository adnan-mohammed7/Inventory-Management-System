package application.controllers;

import application.abstractClasses.Part;
import application.interfaces.StageImp;
import application.models.InHouse;
import application.utility.Loader;
import application.utility.Validate;
import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.control.RadioButton;
import javafx.scene.control.TextField;
import javafx.scene.control.ToggleGroup;
import javafx.stage.Stage;

public class ModifyPartScreenController implements StageImp {
	
	private Stage stage;
	
	private Part part;

    @FXML
    private Button cancelBtn;

    @FXML
    private TextField idField;

    @FXML
    private RadioButton inHouseRadioBtn;

    @FXML
    private TextField inventoryField;

    @FXML
    private TextField machineCompanyField;

    @FXML
    private Label machineCompanyLabel;

    @FXML
    private TextField maxField;

    @FXML
    private TextField minField;

    @FXML
    private TextField nameField;

    @FXML
    private RadioButton outsourcedRadioBtn;

    @FXML
    private TextField priceField;

    @FXML
    private Button saveBtn;
    
    private ToggleGroup partType;
    private int oldId;
    
    @FXML void initialize() {
    	partType = new ToggleGroup();
    	inHouseRadioBtn.setToggleGroup(partType);
    	outsourcedRadioBtn.setToggleGroup(partType);
    	
    	partType.selectedToggleProperty().addListener((obj, ov, nv) -> {
    		if(nv == inHouseRadioBtn) {
    			machineCompanyLabel.setText("Machine ID");
    		} else if(nv == outsourcedRadioBtn) {
    			machineCompanyLabel.setText("Company Name");
    		}
    	});
    	
    	
    	
    	nameField.requestFocus();
    }

    @FXML
    void handleCancel(ActionEvent event) {
    	Loader.openMain(stage);
    }

    @FXML
    void handleSave(ActionEvent event) {
    	if(Validate.validateFields(nameField, inventoryField, priceField, maxField, minField, machineCompanyField, inHouseRadioBtn.isSelected())) {
    		part = Validate.getPart(nameField, inventoryField, priceField, maxField, minField, machineCompanyField, inHouseRadioBtn.isSelected());
    		Loader.openMain(stage);	
    	}
    	Loader.openMain(stage);
    }

	@Override
	public void setStage(Stage stage) {
		this.stage = stage;
	}
	
	public void setPart(Part part) {
		this.part = part;
		
		if(part.getClass() == InHouse.class) {
    		inHouseRadioBtn.setSelected(true);
    		machineCompanyField.setText(String.valueOf(part.getId()));
    	}else {
    		outsourcedRadioBtn.setSelected(true);
    	}
    	
    	oldId = part.getId();
    	idField.setText(String.valueOf(part.getId()));
    	nameField.setText(part.getName());
    	inventoryField.setText(String.valueOf(part.getStock()));
    	priceField.setText(String.valueOf(part.getPrice()));
    	maxField.setText(String.valueOf(part.getMax()));
    	minField.setText(String.valueOf(part.getMin()));
	}

}
